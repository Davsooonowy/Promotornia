# Generated by Django 5.2 on 2025-05-15 13:11

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('accounts', '0001_initial'), ('accounts', '0002_fieldofstudy_systemuser_expiration_date_and_more'), ('accounts', '0003_alter_fieldofstudy_name_and_more'), ('accounts', '0004_alter_systemuser_expiration_date'), ('accounts', '0005_tag_alter_systemuser_expiration_date_systemuser_tags'), ('accounts', '0006_faculty_systemuser_title_and_more'), ('accounts', '0007_fieldofstudy_faculty_and_more'), ('accounts', '0008_alter_systemuser_expiration_date'), ('accounts', '0009_alter_systemuser_expiration_date')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('faculty', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='accounts.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='SystemUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(default='', max_length=255)),
                ('last_name', models.CharField(default='', max_length=255)),
                ('is_student', models.BooleanField(default=False)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('is_dean', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('expiration_date', models.DateTimeField(default=datetime.datetime(2035, 5, 9, 7, 45, 25, 210510, tzinfo=datetime.timezone.utc))),
                ('field_of_study', models.ManyToManyField(to='accounts.fieldofstudy')),
                ('tags', models.ManyToManyField(to='accounts.tag')),
                ('title', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
